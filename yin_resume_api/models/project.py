from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from yin_resume_api.models.base_model import Model
from yin_resume_api import util


class Project(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name_id=None, name=None, link=None, github=None, desc=None, pic=None):  # noqa: E501
        """Project - a model defined in OpenAPI

        :param name_id: The name_id of this Project.  # noqa: E501
        :type name_id: str
        :param name: The name of this Project.  # noqa: E501
        :type name: str
        :param link: The link of this Project.  # noqa: E501
        :type link: str
        :param github: The github of this Project.  # noqa: E501
        :type github: str
        :param desc: The desc of this Project.  # noqa: E501
        :type desc: str
        :param pic: The pic of this Project.  # noqa: E501
        :type pic: str
        """
        self.openapi_types = {
            'name_id': str,
            'name': str,
            'link': str,
            'github': str,
            'desc': str,
            'pic': str
        }

        self.attribute_map = {
            'name_id': 'name_id',
            'name': 'name',
            'link': 'link',
            'github': 'github',
            'desc': 'desc',
            'pic': 'pic'
        }

        self._name_id = name_id
        self._name = name
        self._link = link
        self._github = github
        self._desc = desc
        self._pic = pic

    @classmethod
    def from_dict(cls, dikt) -> 'Project':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The project of this Project.  # noqa: E501
        :rtype: Project
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name_id(self) -> str:
        """Gets the name_id of this Project.


        :return: The name_id of this Project.
        :rtype: str
        """
        return self._name_id

    @name_id.setter
    def name_id(self, name_id: str):
        """Sets the name_id of this Project.


        :param name_id: The name_id of this Project.
        :type name_id: str
        """

        self._name_id = name_id

    @property
    def name(self) -> str:
        """Gets the name of this Project.


        :return: The name of this Project.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Project.


        :param name: The name of this Project.
        :type name: str
        """

        self._name = name

    @property
    def link(self) -> str:
        """Gets the link of this Project.


        :return: The link of this Project.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link: str):
        """Sets the link of this Project.


        :param link: The link of this Project.
        :type link: str
        """

        self._link = link

    @property
    def github(self) -> str:
        """Gets the github of this Project.


        :return: The github of this Project.
        :rtype: str
        """
        return self._github

    @github.setter
    def github(self, github: str):
        """Sets the github of this Project.


        :param github: The github of this Project.
        :type github: str
        """

        self._github = github

    @property
    def desc(self) -> str:
        """Gets the desc of this Project.


        :return: The desc of this Project.
        :rtype: str
        """
        return self._desc

    @desc.setter
    def desc(self, desc: str):
        """Sets the desc of this Project.


        :param desc: The desc of this Project.
        :type desc: str
        """

        self._desc = desc

    @property
    def pic(self) -> str:
        """Gets the pic of this Project.


        :return: The pic of this Project.
        :rtype: str
        """
        return self._pic

    @pic.setter
    def pic(self, pic: str):
        """Sets the pic of this Project.


        :param pic: The pic of this Project.
        :type pic: str
        """

        self._pic = pic
