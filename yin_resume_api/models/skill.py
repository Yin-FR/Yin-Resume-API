from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from yin_resume_api.models.base_model import Model
from yin_resume_api import util


class Skill(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name_id=None, skill_name=None, skill_value=None):  # noqa: E501
        """Skill - a model defined in OpenAPI

        :param name_id: The name_id of this Skill.  # noqa: E501
        :type name_id: str
        :param skill_name: The skill_name of this Skill.  # noqa: E501
        :type skill_name: str
        :param skill_value: The skill_value of this Skill.  # noqa: E501
        :type skill_value: int
        """
        self.openapi_types = {
            'name_id': str,
            'skill_name': str,
            'skill_value': int
        }

        self.attribute_map = {
            'name_id': 'name_id',
            'skill_name': 'skill_name',
            'skill_value': 'skill_value'
        }

        self._name_id = name_id
        self._skill_name = skill_name
        self._skill_value = skill_value

    @classmethod
    def from_dict(cls, dikt) -> 'Skill':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The skill of this Skill.  # noqa: E501
        :rtype: Skill
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name_id(self) -> str:
        """Gets the name_id of this Skill.


        :return: The name_id of this Skill.
        :rtype: str
        """
        return self._name_id

    @name_id.setter
    def name_id(self, name_id: str):
        """Sets the name_id of this Skill.


        :param name_id: The name_id of this Skill.
        :type name_id: str
        """

        self._name_id = name_id

    @property
    def skill_name(self) -> str:
        """Gets the skill_name of this Skill.


        :return: The skill_name of this Skill.
        :rtype: str
        """
        return self._skill_name

    @skill_name.setter
    def skill_name(self, skill_name: str):
        """Sets the skill_name of this Skill.


        :param skill_name: The skill_name of this Skill.
        :type skill_name: str
        """

        self._skill_name = skill_name

    @property
    def skill_value(self) -> int:
        """Gets the skill_value of this Skill.


        :return: The skill_value of this Skill.
        :rtype: int
        """
        return self._skill_value

    @skill_value.setter
    def skill_value(self, skill_value: int):
        """Sets the skill_value of this Skill.


        :param skill_value: The skill_value of this Skill.
        :type skill_value: int
        """

        self._skill_value = skill_value
