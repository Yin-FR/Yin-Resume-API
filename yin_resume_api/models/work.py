from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from yin_resume_api.models.base_model import Model
from yin_resume_api import util


class Work(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name_id=None, company_name=None, company_link=None, company_pic=None, role=None, start_time=None, end_time=None, desc=None):  # noqa: E501
        """Work - a model defined in OpenAPI

        :param name_id: The name_id of this Work.  # noqa: E501
        :type name_id: str
        :param company_name: The company_name of this Work.  # noqa: E501
        :type company_name: str
        :param company_link: The company_link of this Work.  # noqa: E501
        :type company_link: str
        :param company_pic: The company_pic of this Work.  # noqa: E501
        :type company_pic: str
        :param role: The role of this Work.  # noqa: E501
        :type role: str
        :param start_time: The start_time of this Work.  # noqa: E501
        :type start_time: str
        :param end_time: The end_time of this Work.  # noqa: E501
        :type end_time: str
        :param desc: The desc of this Work.  # noqa: E501
        :type desc: str
        """
        self.openapi_types = {
            'name_id': str,
            'company_name': str,
            'company_link': str,
            'company_pic': str,
            'role': str,
            'start_time': str,
            'end_time': str,
            'desc': str
        }

        self.attribute_map = {
            'name_id': 'name_id',
            'company_name': 'company_name',
            'company_link': 'company_link',
            'company_pic': 'company_pic',
            'role': 'role',
            'start_time': 'start_time',
            'end_time': 'end_time',
            'desc': 'desc'
        }

        self._name_id = name_id
        self._company_name = company_name
        self._company_link = company_link
        self._company_pic = company_pic
        self._role = role
        self._start_time = start_time
        self._end_time = end_time
        self._desc = desc

    @classmethod
    def from_dict(cls, dikt) -> 'Work':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The work of this Work.  # noqa: E501
        :rtype: Work
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name_id(self) -> str:
        """Gets the name_id of this Work.


        :return: The name_id of this Work.
        :rtype: str
        """
        return self._name_id

    @name_id.setter
    def name_id(self, name_id: str):
        """Sets the name_id of this Work.


        :param name_id: The name_id of this Work.
        :type name_id: str
        """

        self._name_id = name_id

    @property
    def company_name(self) -> str:
        """Gets the company_name of this Work.


        :return: The company_name of this Work.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name: str):
        """Sets the company_name of this Work.


        :param company_name: The company_name of this Work.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def company_link(self) -> str:
        """Gets the company_link of this Work.


        :return: The company_link of this Work.
        :rtype: str
        """
        return self._company_link

    @company_link.setter
    def company_link(self, company_link: str):
        """Sets the company_link of this Work.


        :param company_link: The company_link of this Work.
        :type company_link: str
        """

        self._company_link = company_link

    @property
    def company_pic(self) -> str:
        """Gets the company_pic of this Work.


        :return: The company_pic of this Work.
        :rtype: str
        """
        return self._company_pic

    @company_pic.setter
    def company_pic(self, company_pic: str):
        """Sets the company_pic of this Work.


        :param company_pic: The company_pic of this Work.
        :type company_pic: str
        """

        self._company_pic = company_pic

    @property
    def role(self) -> str:
        """Gets the role of this Work.


        :return: The role of this Work.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this Work.


        :param role: The role of this Work.
        :type role: str
        """

        self._role = role

    @property
    def start_time(self) -> str:
        """Gets the start_time of this Work.


        :return: The start_time of this Work.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time: str):
        """Sets the start_time of this Work.


        :param start_time: The start_time of this Work.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def end_time(self) -> str:
        """Gets the end_time of this Work.


        :return: The end_time of this Work.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time: str):
        """Sets the end_time of this Work.


        :param end_time: The end_time of this Work.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def desc(self) -> str:
        """Gets the desc of this Work.


        :return: The desc of this Work.
        :rtype: str
        """
        return self._desc

    @desc.setter
    def desc(self, desc: str):
        """Sets the desc of this Work.


        :param desc: The desc of this Work.
        :type desc: str
        """

        self._desc = desc
