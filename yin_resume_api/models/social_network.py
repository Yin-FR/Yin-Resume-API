from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from yin_resume_api.models.base_model import Model
from yin_resume_api import util


class SocialNetwork(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name_id=None, name=None, class_name=None, url=None):  # noqa: E501
        """SocialNetwork - a model defined in OpenAPI

        :param name_id: The name_id of this SocialNetwork.  # noqa: E501
        :type name_id: str
        :param name: The name of this SocialNetwork.  # noqa: E501
        :type name: str
        :param class_name: The class_name of this SocialNetwork.  # noqa: E501
        :type class_name: str
        :param url: The url of this SocialNetwork.  # noqa: E501
        :type url: str
        """
        self.openapi_types = {
            'name_id': str,
            'name': str,
            'class_name': str,
            'url': str
        }

        self.attribute_map = {
            'name_id': 'name_id',
            'name': 'name',
            'class_name': 'className',
            'url': 'url'
        }

        self._name_id = name_id
        self._name = name
        self._class_name = class_name
        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'SocialNetwork':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The social_network of this SocialNetwork.  # noqa: E501
        :rtype: SocialNetwork
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name_id(self) -> str:
        """Gets the name_id of this SocialNetwork.


        :return: The name_id of this SocialNetwork.
        :rtype: str
        """
        return self._name_id

    @name_id.setter
    def name_id(self, name_id: str):
        """Sets the name_id of this SocialNetwork.


        :param name_id: The name_id of this SocialNetwork.
        :type name_id: str
        """

        self._name_id = name_id

    @property
    def name(self) -> str:
        """Gets the name of this SocialNetwork.


        :return: The name of this SocialNetwork.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SocialNetwork.


        :param name: The name of this SocialNetwork.
        :type name: str
        """

        self._name = name

    @property
    def class_name(self) -> str:
        """Gets the class_name of this SocialNetwork.


        :return: The class_name of this SocialNetwork.
        :rtype: str
        """
        return self._class_name

    @class_name.setter
    def class_name(self, class_name: str):
        """Sets the class_name of this SocialNetwork.


        :param class_name: The class_name of this SocialNetwork.
        :type class_name: str
        """

        self._class_name = class_name

    @property
    def url(self) -> str:
        """Gets the url of this SocialNetwork.


        :return: The url of this SocialNetwork.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this SocialNetwork.


        :param url: The url of this SocialNetwork.
        :type url: str
        """

        self._url = url
