openapi: 3.0.0
info:
  description: "This is Flask API server of https://Yin-FR.github.io, generated by\
    \ OpenAPI."
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Yin Resume API
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: /v1
tags:
- description: Everything about your reume
  name: resume
- description: About projects
  name: project
- description: Operations about user
  name: user
- description: Operations about images
  name: image
paths:
  /image:
    get:
      description: Get an image by name
      operationId: get_image_by_name
      parameters:
      - description: name of the image
        explode: false
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: successful operation
        "400":
          description: Invalid name supplied
        "404":
          description: Image not found by name
      summary: Find image by name
      tags:
      - image
      x-openapi-router-controller: yin_resume_api.controllers.image_controller
  /project/projects:
    get:
      description: Get the projects information
      operationId: get_projects
      parameters:
      - description: ID of the person
        explode: false
        in: query
        name: name_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/project'
            application/json:
              schema:
                $ref: '#/components/schemas/project'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Person not found
      summary: Get the projects information by ID
      tags:
      - project
      x-openapi-router-controller: yin_resume_api.controllers.project_controller
  /resume/descs:
    get:
      description: Get the text about self description
      operationId: get_descs
      parameters:
      - description: ID of the person
        explode: false
        in: query
        name: name_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Desc'
            application/json:
              schema:
                $ref: '#/components/schemas/Desc'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Person not found
      summary: Find person description by ID
      tags:
      - resume
      x-openapi-router-controller: yin_resume_api.controllers.resume_controller
  /resume/educations:
    get:
      description: Get all education info for a person by ID
      operationId: get_educations
      parameters:
      - description: ID of the person
        explode: false
        in: query
        name: name_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/education'
            application/json:
              schema:
                $ref: '#/components/schemas/education'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Person not found
      summary: Find person description by ID
      tags:
      - resume
      x-openapi-router-controller: yin_resume_api.controllers.resume_controller
  /resume/skills:
    get:
      description: Get all skills info for a person by ID
      operationId: get_skills
      parameters:
      - description: ID of the person
        explode: false
        in: query
        name: name_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/skill'
            application/json:
              schema:
                $ref: '#/components/schemas/skill'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Person not found
      summary: Find person description by ID
      tags:
      - resume
      x-openapi-router-controller: yin_resume_api.controllers.resume_controller
  /resume/social_networks:
    get:
      description: Get all social network info for a person by ID
      operationId: get_social_networks
      parameters:
      - description: ID of the person
        explode: false
        in: query
        name: name_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/social_network'
            application/json:
              schema:
                $ref: '#/components/schemas/social_network'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Person not found
      summary: Find social network description by ID
      tags:
      - resume
      x-openapi-router-controller: yin_resume_api.controllers.resume_controller
  /resume/works:
    get:
      description: Get all work info for a person by ID
      operationId: get_works
      parameters:
      - description: ID of the person
        explode: false
        in: query
        name: name_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/work'
            application/json:
              schema:
                $ref: '#/components/schemas/work'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Person not found
      summary: Find person description by ID
      tags:
      - resume
      x-openapi-router-controller: yin_resume_api.controllers.resume_controller
components:
  schemas:
    Desc:
      description: A description of a person stored in our database
      example:
        name_id: jackpy
        name: Jack
        profile: Jack.png
        mail: jack.thomas@gmail.com
        phone: 122345678
        phone-prefix: 33
        address: 1 rue Ansien Lbehs
        desc: "Hello, I am Jack"
      properties:
        name_id:
          type: string
        name:
          type: string
        profile:
          type: string
        mail:
          type: string
        phone:
          format: int64
          type: integer
        phone-prefix:
          format: int64
          type: integer
        address:
          type: string
        desc:
          type: string
      title: Personal Description
      type: object
      xml:
        name: desc
    education:
      description: A breif description of education experience
      example:
        name_id: jackpy
        school_name: MIT
        school_link: MIT.com
        school_pic: MIT-logo.png
        diploma: Bachelor of Engineering
        graduation_time: June 2009
        desc: I have learnt Computer Science
      properties:
        name_id:
          type: string
        school_name:
          type: string
        school_link:
          type: string
        school_pic:
          type: string
        diploma:
          type: string
        graduation_time:
          type: string
        desc:
          type: string
      title: Education Experience Description
      type: object
      xml:
        name: education
    skill:
      description: A breif description of skill
      example:
        name_id: jackpy
        skill_name: C
        skill_value: 95
      properties:
        name_id:
          type: string
        skill_name:
          type: string
        skill_value:
          format: int64
          type: integer
      title: Skill Description
      type: object
      xml:
        name: skill
    project:
      description: A breif description of project
      example:
        name_id: jackpy
        name: XXX Service
        link: https://xxxservice.com
        github: https://github.com/jackpy/xxxservice
        desc: A xxx service which is implemented by ABC.
        pic: xxxservice.png
      properties:
        name_id:
          type: string
        name:
          type: string
        link:
          type: string
        github:
          type: string
        desc:
          type: string
        pic:
          type: string
      title: Project Description
      type: object
      xml:
        name: project
    work:
      description: A breif description of professional experience
      example:
        name_id: jackpy
        company_name: Google
        company_link: google.com
        company_pic: google-logo.png
        role: Software Engineer
        start_time: July 2009
        end_time: October 2015
        desc: Create several cloud services
      properties:
        name_id:
          type: string
        company_name:
          type: string
        company_link:
          type: string
        company_pic:
          type: string
        role:
          type: string
        start_time:
          type: string
        end_time:
          type: string
        desc:
          type: string
      title: Professional Experience Description
      type: object
      xml:
        name: work
    social_network:
      description: A breif description of social network
      example:
        name_id: jackpy
        name: linkedin
        className: fa fa-linkedin
        url: https://www.linkedin.com
      properties:
        name_id:
          type: string
        name:
          type: string
        className:
          type: string
        url:
          type: string
      title: Social Network Type and URL
      type: object
      xml:
        name: social_network
