openapi: 3.0.0
info:
  description: "This is Flask API server of https://Yin-FR.github.io, generated by\
    \ OpenAPI."
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: OpenAPI Petstore
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: /v1
tags:
- description: Everything about your reume
  name: resume
- description: About projects
  name: work
- description: Operations about user
  name: user
paths:
  /resume/description:
    get:
      description: Get the text about self description
      operationId: get_desc
      parameters:
      - description: ID of the person
        explode: false
        in: query
        name: name_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Desc'
            application/json:
              schema:
                $ref: '#/components/schemas/Desc'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Person not found
      summary: Find person description by ID
      tags:
      - resume
      x-openapi-router-controller: yin_resume_api.controllers.resume_controller
components:
  schemas:
    Desc:
      description: A description of a person stored in our database
      example:
        name_id: jackpy
        name: Jack
        profile: Jack.png
        mail: jack.thomas@gmail.com
        phone: 122345678
        phone-prefix: 33
        address: 1 rue Ansien Lbehs
        desc: "Hello, I am Jack"
      properties:
        name_id:
          type: string
        name:
          type: string
        profile:
          type: string
        mail:
          type: string
        phone:
          format: int64
          type: integer
        phone-prefix:
          format: int64
          type: integer
        address:
          type: string
        desc:
          type: string
      title: Personal Description
      type: object
      xml:
        name: desc
